#ifndef OPENGL_STUDY_UNIFORM_DATA_TYPE_H
#define OPENGL_STUDY_UNIFORM_DATA_TYPE_H

#include "graphics_backend.h"

enum class UniformDataType : GRAPHICS_BACKEND_TYPE_ENUM
{
    FLOAT       = GRAPHICS_BACKEND_FLOAT,
    FLOAT_VEC2  = GRAPHICS_BACKEND_FLOAT_VEC2,
    FLOAT_VEC3  = GRAPHICS_BACKEND_FLOAT_VEC3,
    FLOAT_VEC4  = GRAPHICS_BACKEND_FLOAT_VEC4,

    DOUBLE          = GRAPHICS_BACKEND_DOUBLE,
    DOUBLE_VEC2     = GRAPHICS_BACKEND_DOUBLE_VEC2,
    DOUBLE_VEC3     = GRAPHICS_BACKEND_DOUBLE_VEC3,
    DOUBLE_VEC4     = GRAPHICS_BACKEND_DOUBLE_VEC4,

    INT         = GRAPHICS_BACKEND_INT,
    INT_VEC2    = GRAPHICS_BACKEND_INT_VEC2,
    INT_VEC3    = GRAPHICS_BACKEND_INT_VEC3,
    INT_VEC4    = GRAPHICS_BACKEND_INT_VEC4,

    UNSIGNED_INT        = GRAPHICS_BACKEND_UNSIGNED_INT,
    UNSIGNED_INT_VEC2   = GRAPHICS_BACKEND_UNSIGNED_INT_VEC2,
    UNSIGNED_INT_VEC3   = GRAPHICS_BACKEND_UNSIGNED_INT_VEC3,
    UNSIGNED_INT_VEC4   = GRAPHICS_BACKEND_UNSIGNED_INT_VEC4,

    BOOL        = GRAPHICS_BACKEND_BOOL,
    BOOL_VEC2   = GRAPHICS_BACKEND_BOOL_VEC2,
    BOOL_VEC3   = GRAPHICS_BACKEND_BOOL_VEC3,
    BOOL_VEC4   = GRAPHICS_BACKEND_BOOL_VEC4,

    FLOAT_MAT2      = GRAPHICS_BACKEND_FLOAT_MAT2,
    FLOAT_MAT3      = GRAPHICS_BACKEND_FLOAT_MAT3,
    FLOAT_MAT4      = GRAPHICS_BACKEND_FLOAT_MAT4,
    FLOAT_MAT2x3    = GRAPHICS_BACKEND_FLOAT_MAT2x3,
    FLOAT_MAT2x4    = GRAPHICS_BACKEND_FLOAT_MAT2x4,
    FLOAT_MAT3x2    = GRAPHICS_BACKEND_FLOAT_MAT3x2,
    FLOAT_MAT3x4    = GRAPHICS_BACKEND_FLOAT_MAT3x4,
    FLOAT_MAT4x2    = GRAPHICS_BACKEND_FLOAT_MAT4x2,
    FLOAT_MAT4x3    = GRAPHICS_BACKEND_FLOAT_MAT4x3,

    DOUBLE_MAT2     = GRAPHICS_BACKEND_DOUBLE_MAT2,
    DOUBLE_MAT3     = GRAPHICS_BACKEND_DOUBLE_MAT3,
    DOUBLE_MAT4     = GRAPHICS_BACKEND_DOUBLE_MAT4,
    DOUBLE_MAT2x3   = GRAPHICS_BACKEND_DOUBLE_MAT2x3,
    DOUBLE_MAT2x4   = GRAPHICS_BACKEND_DOUBLE_MAT2x4,
    DOUBLE_MAT3x2   = GRAPHICS_BACKEND_DOUBLE_MAT3x2,
    DOUBLE_MAT3x4   = GRAPHICS_BACKEND_DOUBLE_MAT3x4,
    DOUBLE_MAT4x2   = GRAPHICS_BACKEND_DOUBLE_MAT4x2,
    DOUBLE_MAT4x3   = GRAPHICS_BACKEND_DOUBLE_MAT4x3,

    SAMPLER_1D                      = GRAPHICS_BACKEND_SAMPLER_1D,
    SAMPLER_2D                      = GRAPHICS_BACKEND_SAMPLER_2D,
    SAMPLER_3D                      = GRAPHICS_BACKEND_SAMPLER_3D,
    SAMPLER_CUBE                    = GRAPHICS_BACKEND_SAMPLER_CUBE,
    SAMPLER_1D_SHADOW               = GRAPHICS_BACKEND_SAMPLER_1D_SHADOW,
    SAMPLER_2D_SHADOW               = GRAPHICS_BACKEND_SAMPLER_2D_SHADOW,
    SAMPLER_1D_ARRAY                = GRAPHICS_BACKEND_SAMPLER_1D_ARRAY,
    SAMPLER_2D_ARRAY                = GRAPHICS_BACKEND_SAMPLER_2D_ARRAY,
    SAMPLER_1D_ARRAY_SHADOW         = GRAPHICS_BACKEND_SAMPLER_1D_ARRAY_SHADOW,
    SAMPLER_2D_ARRAY_SHADOW         = GRAPHICS_BACKEND_SAMPLER_2D_ARRAY_SHADOW,
    SAMPLER_2D_MULTISAMPLE          = GRAPHICS_BACKEND_SAMPLER_2D_MULTISAMPLE,
    SAMPLER_2D_MULTISAMPLE_ARRAY    = GRAPHICS_BACKEND_SAMPLER_2D_MULTISAMPLE_ARRAY,
    SAMPLER_CUBE_SHADOW             = GRAPHICS_BACKEND_SAMPLER_CUBE_SHADOW,
    SAMPLER_BUFFER                  = GRAPHICS_BACKEND_SAMPLER_BUFFER,
    SAMPLER_2D_RECT                 = GRAPHICS_BACKEND_SAMPLER_2D_RECT,
    SAMPLER_2D_RECT_SHADOW          = GRAPHICS_BACKEND_SAMPLER_2D_RECT_SHADOW,

    INT_SAMPLER_1D                      = GRAPHICS_BACKEND_INT_SAMPLER_1D,
    INT_SAMPLER_2D                      = GRAPHICS_BACKEND_INT_SAMPLER_2D,
    INT_SAMPLER_3D                      = GRAPHICS_BACKEND_INT_SAMPLER_3D,
    INT_SAMPLER_CUBE                    = GRAPHICS_BACKEND_INT_SAMPLER_CUBE,
    INT_SAMPLER_1D_ARRAY                = GRAPHICS_BACKEND_INT_SAMPLER_1D_ARRAY,
    INT_SAMPLER_2D_ARRAY                = GRAPHICS_BACKEND_INT_SAMPLER_2D_ARRAY,
    INT_SAMPLER_2D_MULTISAMPLE          = GRAPHICS_BACKEND_INT_SAMPLER_2D_MULTISAMPLE,
    INT_SAMPLER_2D_MULTISAMPLE_ARRAY    = GRAPHICS_BACKEND_INT_SAMPLER_2D_MULTISAMPLE_ARRAY,
    INT_SAMPLER_BUFFER                  = GRAPHICS_BACKEND_INT_SAMPLER_BUFFER,
    INT_SAMPLER_2D_RECT                 = GRAPHICS_BACKEND_INT_SAMPLER_2D_RECT,

    UNSIGNED_INT_SAMPLER_1D                     = GRAPHICS_BACKEND_UNSIGNED_INT_SAMPLER_1D,
    UNSIGNED_INT_SAMPLER_2D                     = GRAPHICS_BACKEND_UNSIGNED_INT_SAMPLER_2D,
    UNSIGNED_INT_SAMPLER_3D                     = GRAPHICS_BACKEND_UNSIGNED_INT_SAMPLER_3D,
    UNSIGNED_INT_SAMPLER_CUBE                   = GRAPHICS_BACKEND_UNSIGNED_INT_SAMPLER_CUBE,
    UNSIGNED_INT_SAMPLER_1D_ARRAY               = GRAPHICS_BACKEND_UNSIGNED_INT_SAMPLER_1D_ARRAY,
    UNSIGNED_INT_SAMPLER_2D_ARRAY               = GRAPHICS_BACKEND_UNSIGNED_INT_SAMPLER_2D_ARRAY,
    UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE         = GRAPHICS_BACKEND_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE,
    UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY   = GRAPHICS_BACKEND_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY,
    UNSIGNED_INT_SAMPLER_BUFFER                 = GRAPHICS_BACKEND_UNSIGNED_INT_SAMPLER_BUFFER,
    UNSIGNED_INT_SAMPLER_2D_RECT                = GRAPHICS_BACKEND_UNSIGNED_INT_SAMPLER_2D_RECT,
};

namespace UniformDataTypeUtils
{
    inline bool IsTexture(UniformDataType type)
    {
        return type == UniformDataType::SAMPLER_1D ||
               type == UniformDataType::SAMPLER_2D ||
               type == UniformDataType::SAMPLER_3D ||
               type == UniformDataType::SAMPLER_CUBE ||
               type == UniformDataType::SAMPLER_1D_SHADOW ||
               type == UniformDataType::SAMPLER_2D_SHADOW ||
               type == UniformDataType::SAMPLER_1D_ARRAY ||
               type == UniformDataType::SAMPLER_2D_ARRAY ||
               type == UniformDataType::SAMPLER_1D_ARRAY_SHADOW ||
               type == UniformDataType::SAMPLER_2D_ARRAY_SHADOW ||
               type == UniformDataType::SAMPLER_2D_MULTISAMPLE ||
               type == UniformDataType::SAMPLER_2D_MULTISAMPLE_ARRAY ||
               type == UniformDataType::SAMPLER_CUBE_SHADOW ||
               type == UniformDataType::SAMPLER_BUFFER ||
               type == UniformDataType::SAMPLER_2D_RECT ||
               type == UniformDataType::SAMPLER_2D_RECT_SHADOW ||
               type == UniformDataType::INT_SAMPLER_1D ||
               type == UniformDataType::INT_SAMPLER_2D ||
               type == UniformDataType::INT_SAMPLER_3D ||
               type == UniformDataType::INT_SAMPLER_CUBE ||
               type == UniformDataType::INT_SAMPLER_1D_ARRAY ||
               type == UniformDataType::INT_SAMPLER_2D_ARRAY ||
               type == UniformDataType::INT_SAMPLER_2D_MULTISAMPLE ||
               type == UniformDataType::INT_SAMPLER_2D_MULTISAMPLE_ARRAY ||
               type == UniformDataType::INT_SAMPLER_BUFFER ||
               type == UniformDataType::INT_SAMPLER_2D_RECT ||
               type == UniformDataType::UNSIGNED_INT_SAMPLER_1D ||
               type == UniformDataType::UNSIGNED_INT_SAMPLER_2D ||
               type == UniformDataType::UNSIGNED_INT_SAMPLER_3D ||
               type == UniformDataType::UNSIGNED_INT_SAMPLER_CUBE ||
               type == UniformDataType::UNSIGNED_INT_SAMPLER_1D_ARRAY ||
               type == UniformDataType::UNSIGNED_INT_SAMPLER_2D_ARRAY ||
               type == UniformDataType::UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE ||
               type == UniformDataType::UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY ||
               type == UniformDataType::UNSIGNED_INT_SAMPLER_BUFFER ||
               type == UniformDataType::UNSIGNED_INT_SAMPLER_2D_RECT;
    }
}

#endif //OPENGL_STUDY_UNIFORM_DATA_TYPE_H
